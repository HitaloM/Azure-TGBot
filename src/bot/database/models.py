# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) 2025 Hitalo M. <https://github.com/HitaloM>

from datetime import datetime

from sqlalchemy import BigInteger, DateTime, Index, Integer, Text
from sqlalchemy.orm import Mapped, mapped_column

from .connection import Base


class Conversation(Base):
    """
    Represents a conversation between a user and the bot.

    Attributes:
        id (int): The primary key of the conversation.
        user_id (int): The unique identifier of the user.
        chat_id (int): The unique identifier of the chat (group or private).
        user_message (str): The message sent by the user.
        bot_response (str): The response generated by the bot.
        timestamp (datetime): The timestamp when the conversation occurred.
    """

    __tablename__ = "conversation"

    id: Mapped[int] = mapped_column(Integer, primary_key=True)
    user_id: Mapped[int] = mapped_column(BigInteger, index=True)
    chat_id: Mapped[int] = mapped_column(BigInteger, index=True)
    user_message: Mapped[str] = mapped_column(Text)
    bot_response: Mapped[str] = mapped_column(Text)
    timestamp: Mapped[datetime] = mapped_column(DateTime, default=datetime.utcnow, index=True)

    __table_args__ = (
        Index("idx_conversation_user_chat_timestamp", "user_id", "chat_id", "timestamp"),
        Index("idx_conversation_chat_timestamp", "chat_id", "timestamp"),
    )

    def __repr__(self) -> str:
        """String representation of the Conversation object."""
        return (
            f"<Conversation(id={self.id}, user_id={self.user_id}, "
            f"chat_id={self.chat_id}, timestamp={self.timestamp})>"
        )


class Whitelist(Base):
    """
    Represents a whitelist entry for allowed chats.

    Attributes:
        id (int): The primary key of the whitelist entry.
        chat_id (int): The unique identifier of the chat, must be unique.
    """

    __tablename__ = "whitelist"

    id: Mapped[int] = mapped_column(Integer, primary_key=True)
    chat_id: Mapped[int] = mapped_column(BigInteger, unique=True, index=True)

    def __repr__(self) -> str:
        """String representation of the Whitelist object."""
        return f"<Whitelist(id={self.id}, chat_id={self.chat_id})>"
